package app;

import java.awt.Color;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Set;

import org.springframework.util.WeakReferenceMonitor.ReleaseListener;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;

import javax.swing.JLabel;

import java.awt.Font;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import java.awt.Dimension;

import javax.swing.SwingConstants;

import java.awt.Component;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Abby
 */
public class DCViewBookScreen extends javax.swing.JFrame {

	String prevPage;
	
    /**
     * Creates new form DCViewBookScreen
     */
	private static String title;
	private static String itemCode;
	private static String price;
	private static String author;
	private static String quantity;
	private static String threshold;
	private static String dateReleased;
    public DCViewBookScreen(String page) {
        initComponents();
        
        prevPage = page;
        
        Color x = new Color(32, 55, 73);
        this.getContentPane().setBackground(x);
    
        Color y = new Color(205, 0, 69);
        backButton.setBackground(y);
        
        titleValueLabel.setText("");
        itemCodeValueLabel.setText("");
        priceValueLabel.setText("");
        authorValueLabel.setText("");
        quantityValueLabel.setText("");
        thresholdValueLabel.setText("");
    }
    /**
     * @wbp.parser.constructor
     */
    public DCViewBookScreen(String itemCode1, String page) {
    	setSize(new Dimension(483, 472));
        initComponents();
        
        prevPage = page;
        
        Color x = new Color(32, 55, 73);
        this.getContentPane().setBackground(x);
    
        Color y = new Color(205, 0, 69);
        backButton.setBackground(y);
        
        titleValueLabel.setText("");
        itemCodeValueLabel.setText("");
        priceValueLabel.setText("");
        authorValueLabel.setText("");
        quantityValueLabel.setText("");
        thresholdValueLabel.setText("");
        dateReleasedValueLabel.setText("");
        
        itemCode = itemCode1;
        
        findBook(itemCode);
        
        titleValueLabel.setText(title);
        itemCodeValueLabel.setText(itemCode);
        authorValueLabel.setText(author);
        priceValueLabel.setText(price);
        quantityValueLabel.setText(quantity);
        thresholdValueLabel.setText(threshold);
        dateReleasedValueLabel.setText(dateReleased);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        authorLabel = new javax.swing.JLabel();
        authorValueLabel = new javax.swing.JLabel();
        titleValueLabel = new javax.swing.JLabel();
        viewBookLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        line = new javax.swing.JLabel();
        itemCodeLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        thresholdLabel = new javax.swing.JLabel();
        thresholdLabel.setSize(new Dimension(483, 472));
        itemCodeValueLabel = new javax.swing.JLabel();
        thresholdValueLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Book");

        authorLabel.setFont(new java.awt.Font("Calibri", 0, 17)); // NOI18N
        authorLabel.setForeground(new java.awt.Color(255, 255, 255));
        authorLabel.setText("Author: ");

        authorValueLabel.setFont(new java.awt.Font("Calibri", 0, 17)); // NOI18N
        authorValueLabel.setForeground(new java.awt.Color(255, 255, 255));
        authorValueLabel.setText("ISA PA TO ABBY");

        titleValueLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        titleValueLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleValueLabel.setText("(Title. ABBY EDIT DIS WAG MO KALIMUTAN ALISIN) ");

        viewBookLabel.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        viewBookLabel.setForeground(new java.awt.Color(255, 255, 255));
        viewBookLabel.setText("VIEW BOOK");

        backButton.setBackground(new java.awt.Color(205, 0, 69));
        backButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back to Books");
        backButton.setBorder(null);
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        line.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        line.setForeground(new java.awt.Color(255, 255, 255));
        line.setText("___________________________________________________");

        itemCodeLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        itemCodeLabel.setForeground(new java.awt.Color(255, 255, 255));
        itemCodeLabel.setText("Item Code:");

        priceLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(255, 255, 255));
        priceLabel.setText("Price:");

        quantityLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        quantityLabel.setForeground(new java.awt.Color(255, 255, 255));
        quantityLabel.setText("Quantity:");

        thresholdLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        thresholdLabel.setForeground(new java.awt.Color(255, 255, 255));
        thresholdLabel.setText("Threshold:");

        itemCodeValueLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        itemCodeValueLabel.setForeground(new java.awt.Color(255, 255, 255));
        itemCodeValueLabel.setText("AYUSIN");

        thresholdValueLabel.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        thresholdValueLabel.setForeground(new java.awt.Color(255, 255, 255));
        thresholdValueLabel.setText("test");
        
        relaseDateLabel = new JLabel();
        relaseDateLabel.setText("Date Released:");
        relaseDateLabel.setForeground(Color.WHITE);
        relaseDateLabel.setFont(new Font("Calibri", Font.PLAIN, 15));
        
        quantityValueLabel = new JLabel();
        quantityValueLabel.setText("test");
        quantityValueLabel.setForeground(Color.WHITE);
        quantityValueLabel.setFont(new Font("Calibri", Font.PLAIN, 15));
        
        priceValueLabel = new JLabel();
        priceValueLabel.setText("test");
        priceValueLabel.setForeground(Color.WHITE);
        priceValueLabel.setFont(new Font("Calibri", Font.PLAIN, 15));
        
        dateReleasedValueLabel = new JLabel();
        dateReleasedValueLabel.setText("test");
        dateReleasedValueLabel.setForeground(Color.WHITE);
        dateReleasedValueLabel.setFont(new Font("Calibri", Font.PLAIN, 15));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(45)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(itemCodeLabel)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(itemCodeValueLabel))
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(authorLabel)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(authorValueLabel))
        						.addGroup(layout.createSequentialGroup()
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(titleValueLabel, GroupLayout.PREFERRED_SIZE, 357, GroupLayout.PREFERRED_SIZE))
        						.addGroup(layout.createSequentialGroup()
        							.addGap(157)
        							.addComponent(viewBookLabel))
        						.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        							.addComponent(backButton, GroupLayout.PREFERRED_SIZE, 167, GroupLayout.PREFERRED_SIZE)
        							.addComponent(line))
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(relaseDateLabel, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(dateReleasedValueLabel, GroupLayout.PREFERRED_SIZE, 142, GroupLayout.PREFERRED_SIZE))
        						.addGroup(layout.createSequentialGroup()
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(priceLabel)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(priceValueLabel, GroupLayout.PREFERRED_SIZE, 74, GroupLayout.PREFERRED_SIZE)))
        					.addGap(65))
        				.addGroup(layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(quantityLabel)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(quantityValueLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addGap(60)
        					.addComponent(thresholdLabel)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(thresholdValueLabel, GroupLayout.PREFERRED_SIZE, 18, GroupLayout.PREFERRED_SIZE)
        					.addGap(109)))
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(40)
        			.addComponent(viewBookLabel)
        			.addGap(41)
        			.addComponent(titleValueLabel, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(authorLabel, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
        				.addComponent(authorValueLabel, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(line)
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(itemCodeLabel, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
        				.addComponent(itemCodeValueLabel, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE))
        			.addGap(17)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(priceValueLabel, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)
        				.addComponent(priceLabel, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE))
        			.addGap(25)
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        						.addComponent(quantityLabel)
        						.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        							.addComponent(quantityValueLabel, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
        							.addComponent(thresholdLabel, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE)))
        					.addGap(17))
        				.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        					.addComponent(thresholdValueLabel, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)))
        			.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(relaseDateLabel)
        				.addComponent(dateReleasedValueLabel, GroupLayout.PREFERRED_SIZE, 19, GroupLayout.PREFERRED_SIZE))
        			.addGap(48)
        			.addComponent(backButton, GroupLayout.PREFERRED_SIZE, 32, GroupLayout.PREFERRED_SIZE)
        			.addGap(41))
        );
        layout.linkSize(SwingConstants.VERTICAL, new Component[] {thresholdLabel, thresholdValueLabel});
        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {thresholdLabel, thresholdValueLabel});
        layout.linkSize(SwingConstants.HORIZONTAL, new Component[] {itemCodeLabel, itemCodeValueLabel});
        getContentPane().setLayout(layout);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {
    	this.dispose();
    	DCBooksTab a = new DCBooksTab("");
    	
        if (prevPage.equals("")){
        	a = new DCBooksTab("");
       	}
    	else if (prevPage.equals("ad")){
    		a = new DCBooksTab("ad");
     	}
        
        a.setVisible(true);  
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DCViewBookScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DCViewBookScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DCViewBookScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DCViewBookScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DCViewBookScreen("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorLabel;
    private javax.swing.JLabel authorValueLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel itemCodeLabel;
    private javax.swing.JLabel itemCodeValueLabel;
    private javax.swing.JLabel line;
    private javax.swing.JLabel thresholdLabel;
    private javax.swing.JLabel thresholdValueLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JLabel titleValueLabel;
    private javax.swing.JLabel viewBookLabel;
    private JLabel relaseDateLabel;
    private JLabel quantityValueLabel;
    private JLabel priceValueLabel;
    private JLabel dateReleasedValueLabel;
    // End of variables declaration//GEN-END:variables
    
    public void findBook(String itemCode1)
    {

    	
			PreparedStatement pst;
			Connection con;
			
			try {

				Class.forName("com.mysql.jdbc.Driver");
				con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/psicomims", "root", "root");
				pst = (PreparedStatement) con.prepareStatement("SELECT * FROM book WHERE item_code ='" + itemCode +"'");
				ResultSet rs = pst.executeQuery();
				int i = 0;
			    
				while (rs.next()) {
				    	 title = rs.getString("title");
				    	 price = rs.getString("price");
				    	 author = rs.getString("author");
				    	 quantity = rs.getString("quantity");
				    	 threshold = rs.getString("threshold");
				    	 dateReleased = rs.getString("release_date");
					i++;
				}
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		
    }
}
